apply plugin: 'com.android.application'
apply from: 'versioning.gradle'

private boolean isWindows() {
    return System.properties['os.name'].toLowerCase().contains('windows')
}

private String currentUserDir() {
    if (isWindows()) {
        return System.getProperty("user.home");
    } else {
        return System.getenv("HOME");
    }
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "ro.ksza.wksp"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode buildVersionCode()
        versionName "1.0"

        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
        /*
        The Android Testing Support Library collects analytics to continuously improve the testing
        experience. More specifically, it uploads a hash of the package name of the application
        under test for each invocation. If you do not wish to upload this data, you can opt-out by
        passing the following argument to the test runner: disableAnalytics "true".
         */
        //testInstrumentationRunnerArguments disableAnalytics: 'true'
    }
    signingConfigs {
        debug {
            storeFile file(currentUserDir() + "/.android/debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
        release {
            storeFile file(currentUserDir() + "/.android/debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
    }
    productFlavors {
        pro {
            applicationId "ro.ksza.wksp.pro"
        }
        free {
            applicationId "ro.ksza.wksp.free"
        }
    }
    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            zipAlignEnabled true
            signingConfig signingConfigs.debug
            applicationIdSuffix ".debug"

            // Run code coverage reports by default on debug builds.
            testCoverageEnabled = true
        }
        release {
            debuggable false
            minifyEnabled false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
    lintOptions {
        disable 'InvalidPackage'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile "com.android.support:appcompat-v7:${rootProject.ext.supportLibVersion}"
    compile "com.android.support:support-annotations:${rootProject.ext.supportLibVersion}"
    compile "com.android.support:design:${rootProject.ext.supportLibVersion}"
    compile "com.android.support:recyclerview-v7:${rootProject.ext.supportLibVersion}"
    compile "com.android.support:cardview-v7:${rootProject.ext.supportLibVersion}"

    compile "jp.wasabeef:recyclerview-animators:${recyclerViewAnimatorVersion}@aar"

    compile "com.squareup.picasso:picasso:${picassoVersion}"

    compile "com.jakewharton:butterknife:${rootProject.ext.butterknifeVersion}"

    compile "com.squareup.okhttp:okhttp:${okhttpVersion}"

    // Retrofit
    compile "com.squareup.retrofit:retrofit:${retrofitVersion}"
    compile "com.squareup.retrofit:converter-gson:${retrofitVersion}"

    compile "com.google.code.gson:gson:${rootProject.ext.gsonVersion}"

    debugCompile 'com.facebook.stetho:stetho:1.2.0'
    debugCompile 'com.facebook.stetho:stetho-okhttp:1.2.0'
    debugCompile 'org.slf4j:slf4j-android:' + rootProject.ext.slf4jDebugVersion

    releaseCompile 'org.slf4j:slf4j-nop:' + rootProject.ext.slf4jNopVersion

    /* Test dependencies */

    testCompile "junit:junit:${rootProject.ext.junitVersion}"
    testCompile "org.mockito:mockito-all:${rootProject.ext.mockitoVersion}"
    testCompile 'org.hamcrest:hamcrest-all:' + rootProject.ext.hamcrestVersion

    // Android Testing Support Library's runner and rules
    androidTestCompile 'com.android.support.test:runner:' + rootProject.ext.runnerVersion
    androidTestCompile 'com.android.support.test:rules:' + rootProject.ext.rulesVersion
    androidTestCompile "com.android.support:support-annotations:${rootProject.ext.supportLibVersion}"

    // Espresso UI Testing
    androidTestCompile 'com.android.support.test.espresso:espresso-core:' + rootProject.ext.espressoVersion

    // Espresso-Contrib, Intents and Web dependencies are not used in this project.
    /*
    androidTestCompile 'com.android.support.test.espresso:espresso-contrib:' + rootProject.ext.espressoVersion
    androidTestCompile 'com.android.support.test.espresso:espresso-intents:' + rootProject.ext.espressoVersion
    androidTestCompile 'com.android.support.test.espresso:espresso-web:' + rootProject.ext.espressoVersion
     */
}
